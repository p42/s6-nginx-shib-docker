<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
          xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
          xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
          clockSkew="180">

    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!--
    The InProcess section contains settings affecting web server modules.
    Required for IIS, but can be removed when using other web servers.
    -->
    <InProcess logger="native.logger">
        <ISAPI normalizeRequest="true">
        <!-- <ISAPI normalizeRequest="true" safeHeaderNames="true"> -->
            <!--
            Maps IIS Instance ID values to the host scheme/name/port. The name is
            required so that the proper <Host> in the request map above is found without
            having to cover every possible DNS/IP combination the user might enter.
            -->
            <Site id="1" name="${CLIENT_APP_HOSTNAME:-your-app.localdomain.com}"
                scheme="${CLIENT_APP_SCHEME:-https}" port="443"
            />
            <!--
            When the port and scheme are omitted, the HTTP request's port and scheme are used.
            If these are wrong because of virtualization, they can be explicitly set here to
            ensure proper redirect generation.
            -->
            <!--
            <Site id="42" name="virtual.example.org" scheme="https" port="443"/>
            -->
        </ISAPI>
    </InProcess>



    <!--
    To customize behavior for specific resources on Apache, and to link vhosts or
    resources to ApplicationOverride settings below, use web server options/commands.
    See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfigurationElements for help.

    For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
    file, and the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPRequestMapHowTo topic.
    -->
    <!-- To customize behavior, map hostnames and path components to applicationId and other settings. -->
    <RequestMapper type="XML">
        <RequestMap applicationId="client"
                    authType="shibboleth">
            <Host name="${CLIENT_APP_HOSTNAME:-your-app.localdomain.com}"
                  requireSession="true">
                <Path name="${CLIENT_APP_SECURE_PATH:-/app}" />
            </Host>
        </RequestMap>
    </RequestMapper>

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <ApplicationDefaults entityID="http://FAKE-DOMAIN/NOT-USED"
                         REMOTE_USER="eppn persistent-id targeted-id">
        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
        Note that while we default checkAddress to "false", this has a negative impact on the
        security of your site. Stealing sessions via cookie theft is much easier with this disabled.
        -->
        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  handlerSSL="false"
                  checkAddress="false"
                  cookieProps="http">

            <!--
            Configures SSO for a default IdP. To allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            -->

            <!-- <SSO entityID="https://idp.testshib.org/idp/shibboleth">SAML2 SAML1</SSO> -->

            <SSO entityID="https://dev-auth.esu10.org/simplesaml/saml2/idp/metadata.php">SAML2 SAML1</SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/status" />

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/session" showAttributeValues="true"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/discoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add attributes with values that can be plugged into the templates.
        -->
        <Errors supportContact="adam.zheng@esu10.org"
                helpLocation="/about.html"
                styleSheet="/shibboleth-sp/main.css"/>

        <!--
          - OpenIDP
          - @see https://openidp.feide.no/
          -->
        <MetadataProvider type="XML" uri="https://dev-auth.esu10.org/simplesaml/saml2/idp/metadata.php"/>
        <!-- <MetadataProvider type="XML" uri="https://dev-auth.esu10.org/simplesaml/saml2/idp/metadata.php"
            backingFilePath="/etc/shibboleth/e10dev-metadata.xml"/> -->
        <!-- <MetadataProvider type="XML" uri="https://openidp.feide.no/simplesaml/saml/idp/metadata.php"
                          backingFilePath="openidp-metadata.xml" reloadInterval="180000"/> -->

        <!--
          - TestShib
          - @see http://www.testshib.org/
          -->
        <!-- <MetadataProvider type="XML" uri="http://www.testshib.org/metadata/testshib-providers.xml"
                          backingFilePath="testshib-two-idp-metadata.xml" reloadInterval="180000"/> -->

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

        <!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.

        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->

        <ApplicationOverride id="client" 
            entityID="${CLIENT_APP_SCHEME:-https}://${CLIENT_APP_HOSTNAME:-your-app.localdomain.com}${SHIBBOLETH_RESPONDER_PATH:-/saml}/metadata"
            REMOTE_USER="eppn persistent-id targeted-id">
            <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                      handlerURL="${SHIBBOLETH_RESPONDER_PATH:-/saml}"
                      handlerSSL="false"
                      checkAddress="false"
                      cookieProps="http">

                <!-- DEFAULT to OpenIdP -->
                <!-- <SSO entityID="https://openidp.feide.no"> -->
                <!-- <SSO entityID="https://dev-auth.esu10.org/simplesaml/saml2/idp/metadata.php"
                    target="${CLIENT_APP_SCHEME:-https}://${CLIENT_APP_HOSTNAME:-your-app.localdomain.com}">
                    SAML2 SAML1
                </SSO> -->
                <!--
                SessionInitiators handle session requests and relay them to a Discovery page,
                or to an IdP if possible. Automatic session setup will use the default or first
                element (or requireSessionWith can specify a specific id to use).
                -->

                <!-- Default directs to a specific IdP (favoring SAML 2 over Shib 1). -->
                <SessionInitiator type="Chaining" Location="/Login" isDefault="true" id="Login"
                                  entityID="https://dev-auth.esu10.org/simplesaml/saml2/idp/metadata.php">
                  
                    <SessionInitiator type="SAML2" template="bindingTemplate.html"/>
                    <SessionInitiator type="Shib1"/>
                    <!--
                    To allow for >1 IdP, remove entityID property from Chaining element and add
                    *either* of the SAMLDS or WAYF handlers below:
                    
                    <SessionInitiator type="SAMLDS" URL="https://ds.example.org/DS/WAYF"/>
                    <SessionInitiator type="WAYF" URL="https://wayf.example.org/WAYF"/>
                    -->
                </SessionInitiator>
                <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
                <Handler type="MetadataGenerator" Location="/metadata" signing="false" http="false" https="true" />

                <!-- Status reporting service. -->
                <Handler type="Status" Location="/status" />

                <!-- Session diagnostic service. -->
                <Handler type="Session" Location="/session" showAttributeValues="true"/>

                <!-- Change the ACS URL -->
                <md:AssertionConsumerService Location="/acs"
                                             index="1" isDefault="true"
                                             Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" />

            </Sessions>
        </ApplicationOverride>

    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>


</SPConfig>
